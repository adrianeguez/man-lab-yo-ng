package com.ec.<%= nombrePaquete %>.repository.repositoryImpl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.Query;

import com.ec.<%= nombrePaquete %>.abstracts.AbstractRepository;
import com.ec.<%= nombrePaquete %>.dao.ArchivoDao;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

@Service
public class <%= nombreMayuscula %>RepositoryImpl extends AbstractRepository<<%= nombreMayuscula %>, Integer> {

    @Autowired
    private ArchivoRepositoryImpl archivoRepository;

    @Override
    public List<Object> findBySearchAndFilter(Map<String, Object> params, Pageable pageable) {
        // Ejemplo
        // String dbQuery = "SELECT e FROM <%= nombreMayuscula %> e WHERE (e.nombre like :busqueda OR e.otroCampo like :busqueda ) ";
        String dbQuery = "SELECT e FROM <%= nombreMayuscula %>";
        // Anadir a esta lista todos los FILTROS
        List<String> listFilters = new ArrayList<>();
        listFilters.add("sisHabilitado");
        //listFilters.add("otroCampoFiltro");
        Query queryEM = this.CreateQueryWithFilters(listFilters, params, dbQuery) // esta funcion crea la consulta con filtros
                // agregamos TODOS los parametros que no est√°n listados en "listFilters" (lista de filtros)
                // EJEMPLO:
                //.setParameter("otroCampoBusqueda", "%" + params.get("otroCampoBusqueda") + "%");
                // SI HAY BUSQUEDA descomentar esta linea
                //.setParameter("busqueda", "%" + params.get("busqueda") + "%");
        int countResults = queryEM.getResultList().size();
        List<?> listResponse = queryEM.setFirstResult(pageable.getPageNumber())
                .setMaxResults(pageable.getPageSize()).getResultList();
        List<<%= nombreMayuscula %>ResponseDao> listResponseDao = <%= nombreMayuscula %>Mapper.setEntityListToDaoResponseList
            .apply((List<<%= nombreMayuscula %>>) listResponse);

        return this.getResponse(
            // Cuando NO SE USA ARCHIVOS descomentar esta linea:
            // listResponseDao, countResults
            // Cuando SE USA ARCHIVOS
            // IMAGEN
            // addFileImagen(listResponseDao), countResults
            // ARCHIVO
            // addFileArchivo(listResponseDao), countResults
            // ARCHIVO e IMAGEN
            // addFileArchivo(listResponseDao), countResults
            // addFileArchivoAndImagen(listResponseDao), countResults
            );
    }

    public List<<%= nombreMayuscula %>ResponseDao> addFileArchivo(List<<%= nombreMayuscula %>ResponseDao> list) {
        List<<%= nombreMayuscula %>ResponseDao> newList = new ArrayList<>();
        for (<%= nombreMayuscula %>ResponseDao object : list) {
            <%= nombreMayuscula %>ResponseDao <%= nombreCamel %> = object;
            ArchivoRequestDao archivoDao = archivoRepository.getFilePrimary("<%= nombreGuionesBajos %>",
            <%= nombreCamel %>.getId());
            <%= nombreCamel %>.setSisArchivo(archivoDao);
            newList.add(<%= nombreCamel %>);
        }
        return newList;
    }

    public List<<%= nombreMayuscula %>ResponseDao> addFileImagen(List<<%= nombreMayuscula %>ResponseDao> list) {
        List<<%= nombreMayuscula %>ResponseDao> newList = new ArrayList<>();
        for (<%= nombreMayuscula %>ResponseDao object : list) {
            <%= nombreMayuscula %>ResponseDao <%= nombreCamel %> = object;
            ArchivoRequestDao archivoDao = archivoRepository.getFilePrimary("<%= nombreGuionesBajos %>",
            <%= nombreCamel %>.getId());
            <%= nombreCamel %>.setSisImagen(archivoDao);
            newList.add(<%= nombreCamel %>);
        }
        return newList;
    }
    public List<<%= nombreMayuscula %>ResponseDao> addFileArchivoAndImagen(List<<%= nombreMayuscula %>ResponseDao> list) {
            List<<%= nombreMayuscula %>ResponseDao> newList = new ArrayList<>();
                newList = addFileArchivo(list);
                newList = addFileImagen(newList);
                return newList;
    }
}
