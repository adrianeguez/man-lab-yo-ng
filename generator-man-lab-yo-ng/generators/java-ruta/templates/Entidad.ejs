package com.ec.<%= nombrePaquete %>.entidad;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.ec.prontiauto.dao.ArchivoRequestDao;

import com.ec.<%= nombrePaquete %>.abstracts.AbstractEntities;

@Entity
@Table(name = "<%= nombreGuionesBajos %>")
public class <%= nombreMayuscula %> extends AbstractEntities {
	// Columnas de la entidad


	// @Column(name = "nombres_apellidos", nullable = false, length = 255)
	// private String nombresApellidos;

	@Transient
	private ArchivoRequestDao sisArchivo;
	@Transient
	private ArchivoRequestDao sisImagen;

	public <%= nombreMayuscula %>{
	}

	// Relaciones de la entidad

	// Papa a hijo
	// @OneToMany(mappedBy = "idNombreRelacionHijo")
	// private List<NombreRelacionHijo> nombreRelacionCollection;


	// Hijo a papa
	// @ManyToOne
	// @JoinColumn(name = "id_nombre_columna_fk", referencedColumnName = "id")
	// private NombreRelacionPapa idNombreRelacionPapa;


	public <%= nombreMayuscula %>() {
	}

	// Setters y Getters
	/*
	public String getNombresApellidos() {
		return nombresApellidos;
	}

	public void setNombresApellidos(String nombresApellidos) {
		this.nombresApellidos = nombresApellidos;
	}
	*/

	public ArchivoRequestDao getSisArchivo() {
	return sisArchivo;
	}

	public void setSisArchivo(ArchivoRequestDao sisArchivo) {
	this.sisArchivo = sisArchivo;
	}

	public ArchivoRequestDao getSisImagen() {
	return sisImagen;
	}

	public void setSisImagen(ArchivoRequestDao sisImagen) {
	this.sisImagen = sisImagen;
	}

	public <%= nombreMayuscula %> setValoresDiferentes(<%= nombreMayuscula %> registroAntiguo, <%= nombreMayuscula %> registroActualizar) {
		// Cambiar propiedad nueva a la antigua
		// if (registroActualizar.getNombres() != null) {
		// 	registroAntiguo.setNombres(registroActualizar.getNombres());
		// }
		if (registroActualizar.getSisHabilitado() != null) {
			registroAntiguo.setSisHabilitado(registroActualizar.getSisHabilitado());
		}
		return registroAntiguo;
	}

}
